---
- name: Ensure the swarm working directory exists
  file:
    path: "{{ swarm_working_dir }}"
    state: directory
    mode: '0755'

- name: Set ownership of the swarm working directory
  file:
    path: "{{ swarm_working_dir }}"
    owner: "{{ swarm_linux_user | default(ansible_user) }}"
    group: "{{ swarm_linux_user | default(ansible_user) }}"
    recurse: yes
  become: yes

- name: Download Jenkins Swarm client jar
  get_url:
    url: "{{ jenkins_master_url }}/swarm/swarm-client.jar"
    dest: "{{ swarm_client_dest }}"
    url_username: "{{ jenkins_swarm_user }}"
    url_password: "{{ jenkins_swarm_secret }}"
    mode: '0755'

- name: Create the start-swarm-agent.sh file from template
  template:
    src: start-swarm-agent.sh.j2
    dest: "{{ swarm_working_dir }}/start-swarm-agent.sh"
    mode: '0755'

- name: Create systemd service file for Jenkins Swarm Agent
  become: yes
  copy:
    dest: /etc/systemd/system/jenkins-swarm-agent.service
    content: |
      [Unit]
      Description=Jenkins Swarm Agent
      After=network.target

      [Service]
      User={{ swarm_linux_user | default(ansible_user) }}
      ExecStart={{ swarm_working_dir }}/start-swarm-agent.sh
      WorkingDirectory={{ swarm_working_dir }}
      Restart=always

      [Install]
      WantedBy=multi-user.target
    mode: '0644'

- name: Reload systemd daemon
  become: yes
  systemd:
    daemon_reload: yes

- name: Enable and start Jenkins Swarm Agent service
  become: yes
  systemd:
    name: jenkins-swarm-agent
    enabled: yes
    state: restarted

- name: Force restart Jenkins Swarm Agent to pick up new parameters
  block:
    - name: Stop Jenkins Swarm Agent service
      become: yes
      systemd:
        name: jenkins-swarm-agent
        state: stopped

    - name: Start Jenkins Swarm Agent service
      become: yes
      systemd:
        name: jenkins-swarm-agent
        state: started
  when: swarm_force_restart | default(true)

